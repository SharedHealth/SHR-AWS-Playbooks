---
- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
      instance-state-name: running
      'tag:Name': "public_proxy"
  register: proxy_instances

- name: Add proxy to dynamic host group
  add_host:
    name: "{{ item.tags.Name }}"
    groupname: gatewayed
    ansible_ssh_host: "{{ item.private_ip_address }}"
    ansible_user: centos
  with_items: "{{ proxy_instances.instances }}"  

- name: install haproxy
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  yum: name=haproxy state=present
  with_items: "{{ proxy_instances.instances }}"

- name: define proxy config
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  template: 
      src=haproxy.j2
      dest=/etc/haproxy/haproxy.cfg
      mode=640
      owner=haproxy
      group=haproxy
      backup=yes
  with_items: "{{ proxy_instances.instances }}"

- name: copy rsyslog configuration
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  template:
    src=haproxy.rsyslog.j2
    dest=/etc/rsyslog.d/haproxy.conf
    backup=yes
  with_items: "{{ proxy_instances.instances }}"

- name: enable rsyslog udp server
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  lineinfile:
    dest=/etc/rsyslog.conf
    line='$ModLoad imudp'
    state=present
  with_items: "{{ proxy_instances.instances }}"

- name: rsyslog udp server configuration
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  lineinfile:
    dest=/etc/rsyslog.conf
    line='$UDPServerRun 514'
    state=present
  with_items: "{{ proxy_instances.instances }}"

- name: rsyslog udp allow only localhost
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  lineinfile:
    dest=/etc/rsyslog.conf
    line='$UDPServerAddress 127.0.0.1'
    insertafter='^\$UDPServerRun'
    state=present
  with_items: "{{ proxy_instances.instances }}"

- name: Set Selinux 8154 to allow outbound access
  seport: ports=8154 proto=tcp setype=http_port_t state=present
  become: yes
  delegate_to: "{{ item.tags.Name }}"
  with_items: "{{ proxy_instances.instances }}"

- name: Add https to dmz zone in firewalld
  firewalld: service=https zone=dmz permanent=true state=enabled
  become: yes
  delegate_to: "{{ item.tags.Name }}"
  with_items: "{{ proxy_instances.instances }}"

- name: Add http to dmz zone in firewalld
  firewalld: service=http zone=dmz permanent=true state=enabled
  become: yes
  delegate_to: "{{ item.tags.Name }}"
  with_items: "{{ proxy_instances.instances }}"

- name: Restart firewalld
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  service: name=firewalld state=restarted
  with_items: "{{ proxy_instances.instances }}"

- name: Restart rsyslog
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  service: name=rsyslog state=restarted
  with_items: "{{ proxy_instances.instances }}"

- name: Restart HAProxy
  delegate_to: "{{ item.tags.Name }}"
  become: yes
  service: name=haproxy state=restarted enabled=yes
  with_items: "{{ proxy_instances.instances }}"