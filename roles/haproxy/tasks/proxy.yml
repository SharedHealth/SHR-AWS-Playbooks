---

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
      instance-state-name: running
      'tag:type': "{{ config.proxy_type }}"
  register: proxy_instances

- name: Add proxy to dynamic host group
  add_host:
    name: "{{ proxy_server.tags.Name }}"
    groupname: gatewayed
    ansible_ssh_host: "{{ proxy_server.private_ip_address }}"
    ansible_user: centos
  with_items: "{{ proxy_instances.instances }}"

- name: install haproxy
  delegate_to: "{{ proxy_server.tags.Name }}"
  become: yes
  yum: name=haproxy state=present
  with_items: "{{ proxy_instances.instances }}"

- name: start haproxy
  delegate_to: "{{ proxy_server.tags.Name }}"
  become: yes
  service: name=haproxy state=started
  with_items: "{{ proxy_instances.instances }}"

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
       instance-state-name: running
       'tag:server_type': "{{config.target_server_type}}"
  register: target_proxy_instances

- name: Copy haproxy config
  delegate_to: "{{ proxy_server.tags.Name }}"
  become: yes
  template:
      src=haproxy.cfg.j2
      dest=/etc/haproxy/haproxy.cfg
      backup=yes
      mode=755
  with_items: "{{ proxy_instances.instances }}"

- name: Restart haproxy
  delegate_to: "{{ proxy_server.tags.Name }}"
  become: yes
  service: name=haproxy state=reloaded
  with_items: "{{ proxy_instances.instances }}"