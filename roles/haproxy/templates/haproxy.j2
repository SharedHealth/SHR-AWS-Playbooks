#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend http-in
        bind :80
        redirect scheme https if !{ ssl_fc }

        bind :443 ssl crt {{ ssl_certs_pem_path }}

        acl host_ci_service hdr(host) -i hie-ci-server.twhosted.com
        use_backend ci_service if host_ci_service

        acl host_dev_h1 hdr(host) -i h1-dev.twhosted.com
        use_backend dev_h1_service if host_dev_h1

        acl host_dev_h2 hdr(host) -i h2-dev.twhosted.com
        use_backend dev_h2_service if host_dev_h2

        acl host_dev_env hdr_end(host) -i dev.twhosted.com
        use_backend dev_env_proxy if host_dev_env

#---------------------------------------------------------------------
# round robin balancing between the SHR Service backends
#---------------------------------------------------------------------
backend ci_service
    server build-server 172.21.1.170:8154 ssl verify none

backend dev_h1_service
    server dev_h1_server 172.21.2.206:443 ssl verify none

backend dev_h2_service
    server dev_h2_server 172.21.2.148:443 ssl verify none

backend dev_env_proxy
    server dev_env_proxy_server 172.21.2.88:443 ssl verify none
